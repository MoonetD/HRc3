import{_ as g}from"./index.8ac88fb7.js";import{gn as m,eV as p,go as y,gp as w,gq as I,bl as f}from"./GISSearch.b73a2371.js";class _{constructor(){this.code=null,this.description=null}}class b{constructor(t){this.error=new _,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function d(e){return new b(e)}class v{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function j(e){return new v(e)}const a=new Set;function F(e,t,n,h=!1,u){a.clear();for(const r in n){const i=e.get(r);if(!i)continue;const l=n[r],s=q(i,l);if(s!==l&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:i,originalValue:l,sanitizedValue:s}}),a.add(i.name),i&&(h||i.editable)){const c=w(i,s);if(c)return d(I(c,i,s));t[i.name]=s}}for(const r of e.requiredFields)if(!a.has(r.name))return d(`missing required field "${r.name}"`);return null}function q(e,t){let n=t;return typeof t=="string"&&m(e)?n=parseFloat(t):t!=null&&p(e)&&typeof t!="string"&&(n=String(t)),y(n)}let o;function G(e,t){if(!e||!f(t))return e;if("rings"in e||"paths"in e){if(!o)throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function P(){return o||(o=await g(()=>import("./geometryEngineJSON.1eda2436.js"),["assets/geometryEngineJSON.1eda2436.js","assets/geometryEngineBase.40db0853.js","assets/geometryEngineJSON.1865e318.js","assets/json.da51edc4.js"]),o)}async function S(e,t){!f(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await P()}export{j as c,F as d,G as h,d as u,S as y};
